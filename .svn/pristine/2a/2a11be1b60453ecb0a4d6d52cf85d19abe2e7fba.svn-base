-- Implantation du module arbre_genealogique


-- TODO :Gérer les exceptions (les remonter) et les tester


package body Arbre_Genealogique is

    val_id : Integer := 0; -- Valeur actuelle de l'id à ajouter dans l'arbre

    procedure Initialiser (Arbre : out T_AG ; 
                           Informations : in M_R.T_Informations) is
        Date_Naissance_Fils : T_Date;
    begin
        -- Initialiser l'arbre binaire et y ajouter la première personne
        M_AB.Initialiser (Arbre.AB);
        M_AB.Ajouter (Arbre.AB, val_id, PREMIER);
        -- Initialiser le registre et y ajouter les informations de la 
        -- première personne
        M_R.Initialiser (Arbre.Registre);
        M_R.Enregistrer (Arbre.Registre, val_id, Informations, 
                         Informations.Date_Naissance);
        -- Initialiser la table de hachage des noeuds et y ajouter le 
        -- premier noeud
        M_TH.Initialiser (Arbre.Noeuds);
        M_TH.Enregistrer (Arbre.Noeuds, val_id, Arbre.AB);
        -- Incrémenter la valeur de val_id
        val_id := val_id + 1;
    end Initialiser;


    procedure Detruire (Arbre : in out T_AG) is
    begin  
        -- Détruire l'arbre binaire
        M_AB.Detruire (Arbre.AB);
        -- Vider le registre
        M_R.Vider (Arbre.Registre);
        -- Vider la table des noeuds
        M_TH.Vider (Arbre.Noeuds);
    end Detruire;


    procedure Ajouter (Arbre : in out T_AG ;
                       id : in Integer ;
                       Parent : in T_Parent ;
                       Informations : in M_R.T_Informations) is
        Date_Naissance_Fils : T_Date;
        Noeud_Fils : T_AB;
    begin
        -- Ajouter au noeud fils un nouveau parent dans l'arbre
        Noeud_Fils := M_TH.Element(Arbre.Noeuds, id);
        if Parent = PERE then
            M_AB.Ajouter (Noeud_Fils, val_id, DROITE);
        elsif Parent = MERE then
            M_AB.Ajouter (Noeud_Fils, val_id, GAUCHE);
        end if;
        -- Enregistrer les informations du parent dans le registre
        Date_Naissance_Fils := M_R.Element(Arbre.Registre, id).Date_Naissance;
        M_R.Enregistrer (Arbre.Registre, val_id, Informations, 
                         Date_Naissance_Fils);
        -- Enregistrer le noeud du parent ajouté dans la table des noeuds
        -----------------------------------------------------------------
    end Ajouter;


    procedure Modifier (Arbre : in out T_AG ;
                       id : in Integer ;
                       Informations : in M_R.T_Informations) is
    begin
        null;
    end Modifier;


    procedure Supprimer (Arbre : in T_AG ; id : in Integer) is
    begin
        null;
    end Supprimer;


    procedure Afficher (Arbre : in T_AG) is
    begin   
        null;
    end;


    procedure Afficher_Parents_Generation (Arbre : in T_AG ;
                                           id : in Integer ;
                                           gen : in Integer) is
    begin
        null;
    end Afficher_Parents_Generation;


    procedure Mono_Parent (Arbre : in T_AG) is
    begin
        null;
    end Mono_Parent;


    procedure Deux_Parent (Arbre : in T_AG) is
    begin
        null;
    end Deux_Parent;


    procedure Sans_Parent (Arbre : in T_AG) is
    begin
        null;
    end Sans_Parent;


    procedure Afficher_n_Generations (Arbre : in T_AG ; 
                                      id : in Integer ;
                                      gen : in Integer) is
    begin
        null;
    end Afficher_n_Generations;


    procedure Afficher_Homonymes (Arbre : in T_AG ; 
                                  id_n : in Integer ;
                                  id_m : in Integer) is
    begin
        null;
    end Afficher_Homonymes;
    
    
    function Taille(Arbre : in T_AG) return Integer is
    begin
        return -1;
    end Taille;


end Arbre_Genealogique;
