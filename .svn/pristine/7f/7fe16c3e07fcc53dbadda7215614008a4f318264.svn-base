-- Ce module d√©finit un type arbre binaire T_AB et les op√©rations associ√©es.

generic
    type T_Valeur is private;

package Arbre_Binaire is

   type T_Direction is (GAUCHE, DROITE, PREMIER);

   type T_AB is limited private;

   Noeud_Present_Exception : exception; -- Noeud dÈj‡ prÈsent dans l'arbre
   Noeud_Absent_Exception : exception; -- Noeud absent de l'arbre


    -- Initialiser un arbre binaire
    -- Param√®tres :
    --     Arbre : l'arbre √† initialiser
    procedure Initialiser (Arbre : out T_AB);


    -- D√©truire l'arbre
    -- Param√®tres :
    --     Arbre : l'arbre √† d√©truire
    procedure Detruire (Arbre : in out T_AB);


    -- Ajouter une valeur dans l'arbre √† droite ou √† gauche d'un noeud valeur
    -- Param√®tres :
    --     Valeur : donn√©e √† ajouter
    --     Noeud : Pointeur vers le noeud de l'arbre o√π ajouter la valeur
    --     Direction : la direction dans laquelle ajouter la valeur
    -- Exception :
    --     Noeud_Present_Exception
    procedure Ajouter (Valeur : in T_Valeur ;
                       Noeud : in T_AB ;
                       Direction : in T_Direction);


    -- Supprimer un noeud et tous ses fils dans l'arbre
    -- Param√®tres :
    --     Noeud : Pointeur vers le noeud que l'on veut supprimer
    -- Exception :
    --     Noeud_Absent_Exception
    procedure Supprimer (Noeud : in out T_AB);



    -- Afficher l'arbre en affichant chaque noeud avec la
    -- proc√©dure Afficher_Noeud
    -- Param√®tres :
    --     Noeud : Pointeur vers le noeud √† partir duquel on veut afficher
    generic
        with procedure Afficher_Noeud (Noeud : in T_AB);
    procedure Afficher (Arbre : in T_AB);


    -- Obtenir le nombre d'√©l√©ments sous un noeud
    -- Param√®tres :
    --     Noeud : Pointeur vers le noeud choisi
   function Taille (Noeud : in T_AB) return Integer;

   -- Obtenir la valeur d'un noeud
   -- ParamËtres :
   --      Noeud : Le noeud dont on veut connaitre la valeur
   -- Retourne :
   --      La valeur du noeud
   -- Exception :
   --      Noeud_Absent_Exception
   function Valeur (Noeud : in T_AB) return T_Valeur;

    -- Obtenir le nombre d'√©l√©ments sous un noeud √† un niveau donn√©
    -- Param√®tres :
    --     Noeud : Pointeur vers le noeud choisi
    function Taille_Niveau (Noeud : in T_AB ; Niveau : in Integer)
                            return Integer;

   -- Tester le module
   -- AB : Un arbre non initialisÈ ‡ tester
   procedure Test (AB1 : in out T_AB;
                   Val_Test1 : in T_Valeur;
                   Val_Test2 : in T_Valeur;
                   Val_Test3 : in T_Valeur;
                   Val_Test4 : in T_Valeur;
                   Val_Test5 : in T_Valeur);


private

   type T_Noeud;
   type T_AB is access T_Noeud;
   type T_Noeud is
      record
         Valeur : T_Valeur;
         Sous_Arbre_Gauche : T_AB;
         Sous_Arbre_Droit : T_AB;
      end record;



end Arbre_Binaire;
