-- Programme de test du module Table_De_Hachage
-- TODO :
-- * Supprimer : Ajouter des cas moins triviaux (?)
-- * Supprimer : Trouver un moyen de tester l'absence d'un élément (Fonction
-- Est_Present dans ads ? Utilisation des exceptions ?)
with Ada.Text_IO;       use Ada.Text_IO;
with Table_De_Hachage;


procedure Test_Table_De_Hachage is

   function M_Hachage (Cle : in Integer) return Integer is
   begin
      return (Cle mod 3);
   end M_Hachage;

   package M_Table_De_Hachage is new Table_De_Hachage (Integer,
                                                       Character,
                                                       3,
                                                       M_Hachage);
   use M_Table_De_Hachage;

   M_Cles : constant array (1..7) of Integer
     := (4,8,1,2,7,14,6);

   M_Donnees : constant array (1..7) of Character
     := ('f','j','M','a','h','h','m');

   M_Nouvelles_Donnees : constant array (1..7) of Character
     := ('a','b','c','j','r','g','q');

   procedure Tester_Initialiser_Vider is
      TH1 : T_TH;
   begin
      Initialiser (TH1);
      pragma Assert (Taille (TH1) = 0);
      Vider (TH1);
   end;

   procedure Tester_Enregistrer is
      TH1 : T_TH;
   begin
      Initialiser (TH1);
      pragma Assert (Taille (TH1) = 0);
      for i in 1..7 loop
         Enregistrer (TH1, M_Cles(i), M_Donnees(i));
         pragma Assert (Element (TH1, M_Cles(i)) = M_Donnees(i));
         pragma Assert (Taille (TH1) = i);
      end loop;
      Vider (TH1);
   end Tester_Enregistrer;

   procedure Tester_Supprimer is
      TH1 : T_TH;
   begin
      Initialiser (TH1);
      pragma Assert (Taille (TH1) = 0);
      for i in 1..7 loop
         Enregistrer (TH1, M_Cles(i), M_Donnees(i));
         pragma Assert (Element (TH1, M_Cles(i)) = M_Donnees(i));
         pragma Assert (Taille (TH1) = i);
      end loop;
      for i in 1..7 loop
         Supprimer (TH1, M_Cles(i));
         -- pragma Assert (Element (TH1, M_Cles(i)) /= M_Donnees(i));
         pragma Assert (Taille (TH1) = 7 - i);
      end loop;
      Vider (TH1);
   end Tester_Supprimer;

   procedure Tester_Modifier is
      TH1 : T_TH;
   begin
      Initialiser (TH1);
      pragma Assert (Taille (TH1) = 0);
      for i in 1..7 loop
         Enregistrer (TH1, M_Cles(i), M_Donnees(i));
         pragma Assert (Element (TH1, M_Cles(i)) = M_Donnees(i));
         pragma Assert (Taille (TH1) = i);
      end loop;
      for i in 1..7 loop
         Modifier (TH1, M_Cles(i), M_Nouvelles_Donnees(i));
         pragma Assert (Element (TH1, M_Cles(i)) = M_Nouvelles_Donnees(i));
         pragma Assert (Taille (TH1) = 7);
      end loop;
      Vider (TH1);
   end Tester_Modifier;

begin
   Put_Line ("Test du module Table_De_Hachage");
   Tester_Initialiser_Vider;
   Tester_Enregistrer;
   Tester_Supprimer;
   Tester_Modifier;
end Test_Table_De_Hachage;
